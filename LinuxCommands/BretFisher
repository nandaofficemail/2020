To Delate Images
--------


docker image prune
docker system prune
docker image prune -a
docker system df

sudo -i

Some Other Commands::
--------------

docker run --rm -d  alpine:latest
docker run --rm -it  alpine:latest
docker build --pull --rm -f ./Dockerfile -t rt:1.0 .
docker container run --publish 99:80 nginx
sudo apt-get install docker-ce="18.03"
chmod 777 ~/.docker/.config.json


type -a docker
type -a time
type docker
/usr/bin/time docker container ls

docker images --filter "since=61233"
docker images --filter "status=created"
docker images --format "{{.ID}}"
docker ps -l
docker ps -a
docker ps -n 5
docker ps -s

docker run -P (default run port)
uname -MVRNOISPA

ssh -l nanda host.com
ssh -v -l nanda host.com
ssh -v nanda host.com
systemctl start docker
systemctl restart docker
systemctl stop docker

gzip a.txt
gzip a.txt.gz -d

bzip2 a.txt
bzip2 -d a.txt.bz2

tar -cvf a.tar (CREATE)
tar -tvf a.tar (VIEW) 
tar -xvf a.tar (EXTRACT)
tar -xvf a.tar.gz -C cd a (Extract and copy to a Folder )

docker exec -it test ps aux | sh | top -b 
docker image history --no-trunc
sudo chmod 777 ~/.docker/config.json
ab -n (apache utils for load test - apache bench mark tool)
curl -fSsL http://
$(curl http://localhost:54)
echo $(curl -L http://google.co.in)
echo $((1+2))
wget -O - http://
LinuxCommands/BretFisher
date > output.file  2>&1  ( if error it redirects to output.file) 
echo h > gt ( Overwrite h to gt file )
echo h >> gt (append h to gt file)
date | tee file1 | ls  ( file1 will have date and ls in the output)

THIS can be replaced by ADD INSTRUCTION  also ADD EXTARCT .tar.gz file to the container
--------------------------------------------------------------------------------------

RUN wget -O myfile.tar.gz http://example.com/myfile.tar.gz \
    && tar -xvf myfile.tar.gz -C /usr/src/myapp \
    && rm myfile.tar.gz


ADD myfile.tar.gz ./


How to Use USER
---------------------------------

FROM alpine:3.8
RUN adduser -D myuser
USER myuser
ENTRYPOINT ["sleep","5"]
CMD ["10"]



WORKDIR
--------------

WORKDIR /a
WORKDIR b
WORKDIR c
RUN pwd  (output /a/b/c )



ARG
---------

FROM busybox
USER ${user:-some_user}
ARG user
USER $user

$ docker build --build-arg user=what_user .
Answer: What User

FROM ubuntu
ARG CONT_IMG_VER
ENV CONT_IMG_VER v1.0.0
RUN echo $CONT_IMG_VER

$ docker build --build-arg CONT_IMG_VER=v2.0.1 .

RUN instruction uses v1.0.0

HEALTHCHECK
-------------------------------------

HEALTHCHECK --interval=5m --timeout=3s \
  CMD curl -f http://localhost/ || exit 1
